---
# Source: dictionary-service-helm-chart/templates/resourcequota.yaml
apiVersion: v1
kind: ResourceQuota
metadata:
  name: "dictionary-service-rq"
  namespace: "dictionary-service-ns"
spec:
  hard:
    pods: 10
    cpu: 4
    memory: 10Gi
---
# Source: dictionary-service-helm-chart/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dictionary-service-secret"
  namespace: "dictionary-service-ns"
  labels:
    app: "dictionary-service"
data:
  DB_HOST: ZGljdGlvbmFyeS1zZXJ2aWNlLW1vbmdvZGItc3RzLTAuZGljdGlvbmFyeS1zZXJ2aWNlLW1vbmdvZGItc3ZjLmRpY3Rpb25hcnktc2VydmljZS1ucy5zdmMuY2x1c3Rlci5sb2NhbA==
  #DB_HOST: dictionary-service-mongodb-sts-0.dictionary-service-mongodb-svc.dictionary-service-ns.svc.cluster.local
  DB_PORT: MjcwMTc=
  #DB_PORT: 27017
  DB_NAME: ZGljdGlvbmFyeS1zZXJ2aWNlLWRi
  #DB_NAME: dictionary-service-db
  #DB_USER: ZGljdFVzZXI=
  #DB_USER: dictUser
  #DB_PASSWORD: ZGljdFBhc3M=
  #DB_PASSWORD: dictPass
  DB_USER: YWRtaW4=
  #DB_USER: admin
  DB_PASSWORD: cGFzc3dvcmQK
  #DB_PASSWORD: cGFzc3dvcmQ=
---
# Source: dictionary-service-helm-chart/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dictionary-service-cm"
  namespace: "dictionary-service-ns"
  labels:
    app: "dictionary-service"
data:
  DICT_API_URL: https://api.dictionaryapi.dev/api/v2/entries/en/
---
# Source: dictionary-service-helm-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "dictionary-service-svc"
  namespace: "dictionary-service-ns"
  labels:
    app: "dictionary-service"
spec:
  selector:
    app: "dictionary-service-app"
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8181
---
# Source: dictionary-service-helm-chart/templates/dnsTest.yaml
��apiVersion: v1
kind: Pod
metadata:
  name: dns-test
  namespace: "{{ .Values.appName }}-ns"
spec:
  containers:
    - image: busybox:latest
      name: dns-test
      resources:
        requests:
          memory: 100Mi
          cpu: 0.2
      command:
        - /bin/sh
        - -c
        - sleep 3600
  #      - ping dictionary-service-mongodb-sts-0.dictionary-service-mongodb-svc.dictionary-service-ns.svc.cluster.local
  dnsPolicy: ClusterFirst
  restartPolicy: Always

---
# Source: dictionary-service-helm-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "dictionary-service-deploy"
  namespace: "dictionary-service-ns"
  labels:
    app: "dictionary-service"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "dictionary-service-app"
  template:
    metadata:
      labels:
        name: "dictionary-service"
        app: "dictionary-service-app"
    spec:
      #      volumes:
      #        - name: "dictionary-service-vol-for-secret"
      #          secret:
      #            secretName: "dictionary-service-secret"
      securityContext:
        runAsUser: 111
        runAsNonRoot: false
      containers:
        - name: "dictionary-service-container"
          image: "docker.io/library/dictionary-service:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8181
          command:
          args:
          envFrom:
            - configMapRef:
                name: "dictionary-service-cm"
            - secretRef:
                name: "dictionary-service-secret"
          #          volumeMounts:
          #            - name : "dictionary-service-vol-for-secret"
          #              mountPath: /app/secret
          #              readOnly: true
          securityContext: # this overrides values of spec.securityContext
            runAsNonRoot: true
            runAsUser: 123
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - "SYS_TIME"
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
---
# Source: dictionary-service-helm-chart/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: "dictionary-service-hpa"
  namespace: "dictionary-service-ns"
  labels:
    app: "dictionary-service"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: "dictionary-service-deploy"
  minReplicas: 2
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 15
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 15
---
# Source: dictionary-service-helm-chart/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "dictionary-service-ingress"
  namespace: "dictionary-service-ns"
  labels:
    app: "dictionary-service"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /v1/dictionary
            pathType: Prefix
            backend:
              service:
                name: "dictionary-service-svc"
                port:
                  number: 80
