apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.appName }}-mongodb-sts"
  namespace: "{{ .Values.appName }}-ns"
  labels:
    app: "{{ .Values.appName }}"
spec:
  serviceName: "{{ .Values.appName }}-mongodb-svc"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: "{{ .Values.mongoImage }}"
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
          env:
            - name: MONGO_INITDB_ROOT_USERNAME_FILE
              value: /etc/k8-test/admin/MONGO_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: /etc/k8-test/admin/MONGO_ROOT_PASSWORD
          volumeMounts:
            - name: k8-test
              mountPath: /etc/k8-test
              readOnly: true
            - name: mongodb-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mongodb-configmap
              mountPath: /config
              readOnly: true
            - name: mongodb-data
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#              - matchExpressions:
#                  - key: "node-type"
#                    operator: "In"
#                    values: ["worker"]
#      nodeSelector:
#        node-type: worker
      volumes:
        - name: k8-test
          secret:
            secretName: "{{ .Values.appName }}-mongodb-secret"
            items:
              - key: MONGO_ROOT_USERNAME
                path: admin/MONGO_ROOT_USERNAME
                mode: 0444
              - key: MONGO_ROOT_PASSWORD
                path: admin/MONGO_ROOT_PASSWORD
                mode: 0444
              - key: MONGO_USERNAME
                path: MONGO_USERNAME
                mode: 0444
              - key: MONGO_PASSWORD
                path: MONGO_PASSWORD
                mode: 0444
              - key: MONGO_USERS_LIST
                path: MONGO_USERS_LIST
                mode: 0444
        - name: mongodb-scripts
          configMap:
            name: "{{ .Values.appName }}-mongodb-cm"
            items:
              - key: ensure-users.js
                path: ensure-users.js
        - name: mongodb-configmap
          configMap:
            name: "{{ .Values.appName }}-mongodb-cm"
            items:
              - key: mongo.conf
                path: mongo.conf
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: "{{ .Values.appName }}-mongodb-pvc"